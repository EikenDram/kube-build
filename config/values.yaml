# server configuration
server:
  #
  # server hostname
  hostname: SWK3S
  #
  # server IP
  ip: 192.168.120.29
  #
  # server user which will be deploying kubernetes cluster
  user: core
  #
  # ssh-rsa key for the user
  # generate it with command:
  #   ssh-keygen
  # copy content of the key from 'id_rsa.pub' file
  #    ssh-rsa <COPY KEY FROM HERE>
  ssh: "AAAA..."
  #
  # create additional user you can access the server with using password
  admin: 
    enabled: true
    #
    # admin user name
    name: admin
    #
    # password
    password: "coreos"
  #
  # ntp server in the network
  ntp: 192.168.120.3
  #
  # default dummy route (needed for coredns to work)
  # disable if your network configuration already has a default route
  dummy:
    enabled: true
    mask: 192.168.120.29/24
    gateway: 192.168.120.1
    dns: 8.8.8.8

# cluster admin credentials 
# will have access to most cluster resources
cluster:
  # Gitea requirement:
  #   username cannot be from reserved list
  #   https://github.com/go-gitea/gitea/issues/6280
  user: k3sadmin
  # ArgoCD requirement:
  #   password should be 8-32 symbols
  password: k3sadmin
  # email address for Gitea
  email: gitea@local.domain

# private docker registry configuration
registry:
  #
  # namespace to deploy component to
  namespace: registry
  # 
  # credentials for accessing registry
  user: regadmin
  password: regpass
  #
  # storage size for registry
  storage: 5Gi
  #
  # self-signed certificate configuration
  cert:
    OU: OrganizationalUnit
    O: Organization
    L: Locality
    S: ProvinceName
    C: CountryName

# chartmuseum configuration
chartmuseum:
  #
  # subdomain name to access component from: <ingress>.<hostname>
  ingress: chartmuseum
  # 
  # credentials for accessing chartmuseum
  user: chartadmin
  password: chartpass
  #
  # storage size for chartmuseum
  storage: 1Gi
  #
  # helm install configuration
  helm:
    #
    # name
    name: chartmuseum
    #
    # values file
    values: values.yaml
    #
    # namespace to deploy helm to
    namespace: chartmuseum

# keycloak configuration
keycloak:
  #
  # subdomain name to access component from: <ingress>.<hostname>
  ingress: keycloak
  #
  # keycloak https port
  # needs to be in K3S NodePort range (30000-32767)
  port: 32080
  #
  # keycloak http port
  # needs to be in K3S NodePort range (30000-32767)
  http: 32081
  #
  # self-signed certificate configuration
  cert:
    C: CountryName
    L: Locality
    O: Organization
  #
  # helm install configuration
  helm:
    #
    # name
    name: keycloak
    #
    # values file
    values: values.yaml
    #
    # namespace to deploy helm to
    namespace: keycloak

# reverse proxy for keycloak
oauth2:
  #
  # subdomain name to access component from: <ingress>.<hostname>
  ingress: auth
  #
  # helm install configuration
  helm:
    #
    # name
    name: auth
    #
    # values file
    values: values.yaml
    #
    # namespace to deploy helm to
    namespace: oauth2

# portainer configuration
portainer:
  #
  # subdomain name to access component from: <ingress>.<hostname>
  ingress: portainer
  #
  # storage size for component
  storage: 2Gi
  #
  # helm install configuration
  helm:
    #
    # name
    name: portainer
    #
    # values file
    values: values.yaml
    #
    # namespace to deploy helm to
    namespace: portainer

# kubernetes dashboard configuration
dashboard:
  #
  # subdomain name to access component from: <ingress>.<hostname>
  ingress: dashboard
  #
  # helm install configuration
  helm:
    #
    # name
    name: dashboard
    #
    # values file
    values: values.yaml
    #
    # namespace to deploy helm to
    namespace: kubernetes-dashboard

# UI for registry configuration
registry-ui:
  #
  # subdomain name to access component from: <ingress>.<hostname>
  ingress: registry
  #
  # helm install configuration
  helm:
    #
    # name
    name: registry-ui
    #
    # values file
    values: values.yaml
    #
    # namespace to deploy helm to
    namespace: registry

# UI for Traefik
traefik-ui:
  #
  # subdomain name to access component from: <ingress>.<hostname>
  ingress: traefik

# prometheus configuration
prometheus:
  #
  # subdomain name to access component from: <ingress>.<hostname>
  ingress: prometheus
  #
  # endpoint
  endpoint: 192.168.120.29
  #
  # storage size for component
  storage: 5Gi
  #
  # helm install configuration
  helm:
    #
    # name
    name: prometheus
    #
    # values file
    values: values.yaml
    #
    # namespace to deploy helm to
    namespace: monitoring

# grafana configuration
grafana:
  #
  # subdomain name to access component from: <ingress>.<hostname>
  ingress: grafana

# loki configuration
loki:
  #
  # storage size for component
  storage: 2Gi
  #
  # helm install configuration
  helm:
    #
    # name
    name: loki
    #
    # values file
    values: values.yaml
    #
    # namespace to deploy helm to
    namespace: monitoring

# minio configuration
# enable if you want to install minio on same server as kubernetes
minio:
  enabled: true
  #
  # minio user group
  group: minio-user
  #
  # minio service user
  # Access key length should be at least 3, and secret key length at least 8 characters
  user: minio-user
  #
  # password
  password: minio-pass
  #
  # volume to use as minio storage
  volume: /mnt/data
  #
  # bucket name
  bucket: k3s

# velero configuration
velero:
  #
  # credentials to access minio server
  minio-user: minio-user
  minio-password: coreos
  #
  # minio bucket name
  minio-bucket: k3s
  #
  # s3 url of minio
  minio-url: http://192.168.120.29:9000
  #
  # public url of minio
  minio-public: http://192.168.120.29:9000
  #
  # helm install configuration
  helm:
    #
    # name
    name: velero
    #
    # values file
    values: values.yaml
    #
    # namespace to deploy helm to
    namespace: velero

# NFS server configuration
nfs:
  #
  # node port for nfs server
  port: 32100

# gitea configuration
gitea:
  #
  # subdomain name to access component from: <ingress>.<hostname>
  ingress: git
  #
  # storage size for gitea
  storage: 2Gi
  #
  # storage size for gitea database
  storage-db: 2Gi
  #
  # helm install configuration
  helm:
    #
    # name
    name: gitea
    #
    # values file
    values: values.yaml
    #
    # namespace to deploy helm to
    namespace: gitea

# argocd configuration
argocd:
  #
  # namespace to deploy component to
  namespace: argocd
  #
  # subdomain name to access component from: <ingress>.<hostname>
  ingress: argocd

# tekton configuration
tekton:
  #
  # subdomain name to access component from: <ingress>.<hostname>
  ingress: tekton

# rabbitmq configuration
rabbitmq:
  #
  # subdomain name to access component from: <ingress>.<hostname>
  ingress: rabbitmq
  # 
  # secret cookie
  cookie: "Rabbit MQ cookie secret"
  #
  # storage size for component
  storage: 2Gi
  #
  # helm install configuration
  helm:
    #
    # name
    name: rabbitmq
    #
    # values file
    values: values.yaml
    #
    # namespace to deploy helm to
    namespace: rabbitmq

# ibm db2 configuration
ibmdb2:
  #
  # db2 instance name
  instance: db2inst1
  # 
  # password to access db2 instance
  password: coreos
  #
  # storage size for component
  storage: 10Gi
  #
  # db2 port 
  # needs to be in K3S NodePort range (30000-32767)
  port: 32000
  #
  # create data management console repository database (REPODB)
  repodb: true
  #
  # helm install configuration
  helm:
    #
    # name
    name: db2
    #
    # values file
    values: values.yaml
    #
    # namespace to deploy helm to
    namespace: ibmdb2

# postgresql configuration
postgresql:
  #
  # admin name
  username: postgres
  # 
  # admin password
  password: coreos
  #
  # storage size for component
  storage: 10Gi
  #
  # postgresql port 
  # needs to be in K3S NodePort range (30000-32767)
  port: 32002
  #
  # helm install configuration
  helm:
    #
    # name
    name: postgresql
    #
    # values file
    values: values.yaml
    #
    # namespace to deploy helm to
    namespace: postgresql

pgadmin:
  #
  # login email
  email: eikendram@gmail.com
  # 
  # admin password
  password: coreos
  #
  # pgadmin port 
  # needs to be in K3S NodePort range (30000-32767)
  port: 32003
  #
  # subdomain name to access component from: <ingress>.<hostname>
  ingress: pgadmin
  #
  # helm install configuration
  helm:
    #
    # name
    name: pgadmin4
    #
    # values file
    values: values.yaml
    #
    # namespace to deploy helm to
    namespace: postgresql


# db2 data management console configuration
db2console: 
  #
  # mount directory name
  dir: dmc
  #
  # docker name
  docker: dmc

# RStudio server configuration
rocker:
  #
  # subdomain name to access component from: <ingress>.<hostname>
  ingress: rocker
  #
  # storage size for component
  storage-workspace: 2Gi
  #
  # storage size for configuration
  storage-config: 1Gi
  #
  # helm install configuration
  helm:
    #
    # name
    name: rocker
    #
    # values file
    values: values.yaml
    #
    # namespace to deploy helm to
    namespace: rocker

# JasperReports server configuration
jasper:
  #
  # subdomain name to access component from: <ingress>.<hostname>
  ingress: jasper
  #
  # storage size for component
  storage: 2Gi
  #
  # helm install configuration
  helm:
    #
    # name
    name: jasper
    #
    # values file
    values: values.yaml
    #
    # namespace to deploy helm to
    namespace: jasper

# KubeHome configuration
kube-home:
  #
  # cluster contact information
  contacts:
    title: Administrator
    name: Aiken Dram
    phone: 77-77
    mail: eikendram@gmail.com
  #
  # cluster specifications
  spec:
    cpu: 4 Cores
    memory: 8Gi
    os: "38.20230625.3.0"
    k3s: v1.25.11
  #
  # url to minio admin
  minio: http://swk3s:9001/
  #
  # KubeUtils configuration
  utils:
    # relative link to access manager tool release
    access: 2D

# KubeR configuration
kube-r:
  # 
  # subdomain name to access component from: <ingress>.<hostname>
  ingress: report

kube-app-template:
  # 
  # subdomain name to access component from: <ingress>.<hostname>
  ingress: app

# images for loaders
loaders:
  # container image for loading docker images to docker registry
  # loaded from ctr, so have to be same name as in k3s ctr images list
  packages: docker.io/eikendram/tools:v1.0
  # container image for working with git repositories
  git: alpine/git:v2.40.1
  # container image for loading npm packages to gitea
  npm: node:lts-alpine
  # container image for loading nuget packages to gitea
  nuget: dotnet/sdk:7.0
  # container image for loading go packages to gitea
  #go: 