#!/bin/sh

{{- template "script" (dict "Values" .Values "Version" .Version.argocd "Images" .Images.argocd)}}

{{- define "init"}}
    {{ template "etc-hosts" dict "Values" .Values "ingress" .Values.argocd.ingress }}
{{- end}}

{{- define "install"}}
    # manifest
    echo "Creating namespace and manifest"
    kubectl create namespace {{.Values.argocd.namespace}}
    kubectl apply -n {{.Values.argocd.namespace}} -f manifest/{{.Version.dir}}/install.yaml

    # insecure
    echo "Fixing params"
    kubectl apply -f install/{{.Version.dir}}/argocd-params.yaml
    kubectl scale -n {{.Values.argocd.namespace}} deployment/argocd-server --replicas=0 && kubectl scale -n {{.Values.argocd.namespace}} deployment/argocd-server --replicas=1

    # ingress
    echo "Adding ingress"
    kubectl apply -f install/{{.Version.dir}}/ingress.yaml

    echo "Waiting for pod to start"
    kubectl wait --for=condition=ready pod -l app.kubernetes.io/name=argocd-server -n {{.Values.argocd.namespace}} --timeout=1m

    # change admin password
    echo "Password is auto generated by default, trying to change..."
    sleep 3
    ARGOCD_PASSWORD=$(kubectl -n {{.Values.argocd.namespace}} get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d; echo)
    argocd login {{.Values.argocd.ingress}}.{{.Values.server.hostname | lower}} --username {{.Values.cluster.user}} --password $ARGOCD_PASSWORD --insecure
    argocd account update-password --account {{.Values.cluster.user}} --current-password $ARGOCD_PASSWORD --new-password {{.Values.cluster.password}} --insecure

    # add chartmuseum helm repo
    echo "Adding chartmuseum repository"
    argocd repo add http://{{.Values.chartmuseum.helm.name}}.{{.Values.chartmuseum.helm.namespace}}:8080/ --username {{.Values.cluster.user}} --password {{.Values.cluster.password}} --type helm --name chartmuseum

    # add cluster-config git repo
    echo "Adding cluster-config git repository"
    argocd repo add http://{{.Values.gitea.helm.name}}-http.{{.Values.gitea.helm.namespace}}:3000/{{.Values.cluster.user}}/cluster-config.git --username {{.Values.cluster.user}} --password {{.Values.cluster.password}}
    
    echo "{{.Version.title}} deployed on https://{{.Values.argocd.ingress}}.{{.Values.server.hostname | lower}}"
{{- end}}

{{- define "upgrade"}}
    # reapply manifests
    kubectl apply -n {{.Values.argocd.namespace}} -f manifest/{{.Version.dir}}/install.yaml
    kubectl apply -n {{.Values.argocd.namespace}} -f install/{{.Version.dir}}/ingress.yaml
{{- end}}

{{- define "uninstall" }}
    # manifest
    kubectl delete -f install/{{.Version.dir}}/argocd-params.yaml
    kubectl delete -f install/{{.Version.dir}}/ingress.yaml
    kubectl delete -f manifest/{{.Version.dir}}/install.yaml -n {{.Values.argocd.namespace}}

    # namespace
    kubectl delete ns {{.Values.argocd.namespace}}
{{- end }}