config:
  clientID: "oauth2-proxy"
  clientSecret: "__secret__"
  # Create a new secret with the following command
  # openssl rand -base64 32 | head -c 32 | base64
  cookieSecret: "__cookie__"
  configFile: |-
    provider = "oidc"
    oidc_issuer_url = "http://{{.Values.keycloak.ingress}}.{{.Values.server.hostname | lower}}/realms/cluster"
    ssl_insecure_skip_verify="true"
    scope="openid email profile groups"
    reverse_proxy = "true"
    cookie_secure = "false"
    email_domains = [ "*" ]
    cookie_domains = ["*.{{.Values.server.hostname | lower}}" ]
    upstreams = [ "static://202" ]
    silence_ping_logging = "true"
    skip_provider_button = "true"

ingress:
  enabled: true
  # className: nginx
  path: /
  # Only used if API capabilities (networking.k8s.io/v1) allow it
  pathType: ImplementationSpecific
  # Used to create an Ingress record.
  hosts:
    - {{.Values.oauth2.ingress}}.{{.Values.server.hostname | lower}}

extraObjects:
  - apiVersion: traefik.containo.us/v1alpha1
    kind: Middleware
    metadata:
      name: auth-proxy
      namespace: default
    spec:
      forwardAuth:
        address: http://{{.Values.oauth2.ingress}}.{{.Values.server.hostname | lower}}/
        trustForwardHeader: true
        authResponseHeaders:
          - X-Auth-Request-Access-Token
          - Authorization
          - Set-Cookie